{
    "name": "celery",
    "image": "mopitz/backend-app",
    "essential": false,
    "command": ["celery", "-A", "economic_system", "worker", "-i"],
    "links": ["db", "redis", "broker"],
    "memoryReservation": 2048,
    "mountPoints": [
      {
        "sourceVolume": "home-ec2-user-enviroments",
        "containerPath": "/code/env",
        "readOnly": true
      }
    ],
    "environment": [
      {
        "name": "AWS_ACCESS_KEY_ID",
        "value": "${AWS_ACCESS_KEY_ID}"
      },
      {
        "name": "AWS_SECRET_ACCESS_KEY",
        "value": "${AWS_SECRET_ACCESS_KEY}"
      },
      {
        "name": "AWS_DEFAULT_REGION",
        "value": "${AWS_DEFAULT_REGION}"
      }
    ]
  },
  {
    "name": "celery-beat",
    "image": "mopitz/backend-app",
    "essential": false,
    "command": ["celery", "-A", "economic_system", "beat", "-l", "info", "--scheduler", "django_celery_beat.schedulers:DatabaseScheduler"],
    "links": ["db", "redis", "broker"],
    "memoryReservation": 2048,
    "mountPoints": [
      {
        "sourceVolume": "home-ec2-user-enviroments",
        "containerPath": "/code/env",
        "readOnly": true
      }
    ],
    "environment": [
      {
        "name": "AWS_ACCESS_KEY_ID",
        "value": "${AWS_ACCESS_KEY_ID}"
      },
      {
        "name": "AWS_SECRET_ACCESS_KEY",
        "value": "${AWS_SECRET_ACCESS_KEY}"
      },
      {
        "name": "AWS_DEFAULT_REGION",
        "value": "${AWS_DEFAULT_REGION}"
      }
    ]
  },
  {
    "name": "nginx",
    "image": "mopitz/backend-nginx",
    "essential": true,
    "memoryReservation": 512,
    "mountPoints": [
      {
        "sourceVolume": "static_files",
        "containerPath": "/static_files",
        "readOnly": true
      }
    ],
    "links": ["api"],
    "environment": [
      {
        "name": "VIRTUAL_HOST",
        "value": "${VIRTUAL_HOST}"
      },
      {
        "name": "LETSENCRYPT_HOST",
        "value": "${LETSENCRYPT_HOST}"
      },
      {
        "name": "LETSENCRYPT_EMAIL",
        "value": "${LETSENCRYPT_EMAIL}"
      }
    ]
  },
  {
    "name": "nginx-proxy",
    "image": "mopitz/backend-nginx-proxy",
    "essential": true,
    "memoryReservation": 256,
    "dockerLabels": {
      "com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy": "true"
    },
    "links": ["nginx"],
    "portMappings": [
      {
        "containerPort": 80,
        "hostPort": 80
      },
      {
        "containerPort": 443,
        "hostPort": 443
      }
    ],
    "mountPoints": [
      {
        "sourceVolume": "home-ec2-user-certs",
        "containerPath": "/etc/nginx/certs",
        "readOnly": true
      },
      {
        "sourceVolume": "etc-nginx-vhost-d",
        "containerPath": "/etc/nginx/vhost.d"
      },
      {
        "sourceVolume": "usr-share-nginx-html",
        "containerPath": "/usr/share/nginx/html"
      },
      {
        "sourceVolume": "var-run-docker-sock",
        "containerPath": "/tmp/docker.sock",
        "readOnly": true
      }
    ]
  },
  {
    "name": "letsencrypt-nginx-proxy-companion",
    "image": "jrcs/letsencrypt-nginx-proxy-companion",
    "essential": false,
    "memoryReservation": 256,
    "environment": [
      {
        "name": "NGINX_PROXY_CONTAINER",
        "value": "nginx-proxy"
      }
    ],
    "volumesFrom": [
      {
        "sourceContainer": "nginx-proxy"
      }
    ],
    "mountPoints": [
      {
        "sourceVolume": "home-ec2-user-certs",
        "containerPath": "/etc/nginx/certs"
      },
      {
        "sourceVolume": "etc-nginx-vhost-d",
        "containerPath": "/etc/nginx/vhost.d"
      },
      {
        "sourceVolume": "usr-share-nginx-html",
        "containerPath": "/usr/share/nginx/html"
      },
      {
        "sourceVolume": "var-run-docker-sock",
        "containerPath": "/var/run/docker.sock",
        "readOnly": true
      }
    ]
  }


  {
    "name": "api",
    "image": "mopitz/backend-app",
    "essential": true,
    "command": ["sh", "scripts/api_start_aws.sh"],
    "links": ["db", "redis", "broker"],
    "memoryReservation": 1024,
    "mountPoints": [
      {
        "sourceVolume": "home-ec2-user-enviroments",
        "containerPath": "/code/env",
        "readOnly": true
      }
    ],
    "environment": [
      {
        "name": "AWS_ACCESS_KEY_ID",
        "value": "${AWS_ACCESS_KEY_ID}"
      },
      {
        "name": "AWS_SECRET_ACCESS_KEY",
        "value": "${AWS_SECRET_ACCESS_KEY}"
      },
      {
        "name": "AWS_DEFAULT_REGION",
        "value": "${AWS_DEFAULT_REGION}"
      }
    ]
  }s