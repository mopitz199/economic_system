version: '3'
volumes:
  pgdata:
  static_files:
  certs:
  vhostd:
  html:
services:
  redis:
    image: redis
    command: redis-server --requirepass ${REDIS_PASS}
    ports:
      - '6379:6379'
  db:
    image: postgres
    environment:
      POSTGRES_DB: "${DATABASE_HOST}"
      POSTGRES_USER: "${DATABASE_USER}"
      POSTGRES_PASSWORD: "${DATABASE_PASSWORD}"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./backups:/backups
    ports:
      - 5432:5432
  web:
    build:
      dockerfile: dockers/prod/web/Dockerfile
      context: .
    command: gunicorn -w 4 economic_system.wsgi -b 0.0.0.0:9000 --timeout 1500 --graceful-timeout 1500 --access-logfile /var/log/gunicorn-access.log --error-logfile /var/log/gunicorn-error.log
    volumes:
      - .:/code
      - static_files:/static_files
    ports:
      - "9000:9000"
    depends_on:
      - db
    environment: 
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_DEFAULT_REGION: ${AWS_DEFAULT_REGION}
  celery:
    build:
      dockerfile: dockers/prod/web/Dockerfile
      context: .
    command: celery -A economic_system worker -i
    volumes:
      - .:/code
      - static_files:/static_files
    depends_on:
      - db
      - redis
      - broker
    environment: 
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_DEFAULT_REGION: ${AWS_DEFAULT_REGION}
  celery-beat:
    build:
      dockerfile: dockers/prod/web/Dockerfile
      context: .
    command: celery -A economic_system beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    volumes:
      - .:/code
    depends_on:
      - db
      - redis
      - broker
    environment: 
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_DEFAULT_REGION: ${AWS_DEFAULT_REGION}
  broker:
    image: rabbitmq:3
    ports:
      - 5672:5672
  nginx:
    build:
      context: .
      dockerfile: dockers/prod/nginx/Dockerfile
    expose:
      - "80"
    volumes:
      - static_files:/static_files
      - ./docs/build:/build
    depends_on:
      - web
    environment:
      - VIRTUAL_HOST=economicapp.io
      - LETSENCRYPT_HOST=economicapp.io
      - LETSENCRYPT_EMAIL=economicsystemapp@gmail.com
  netdata:
    image: netdata/netdata
    hostname: economicapp.io
    ports:
      - 19999:19999
    cap_add:
      - SYS_PTRACE
    security_opt:
      - apparmor:unconfined
    volumes:
      - /etc/passwd:/host/etc/passwd:ro
      - /etc/group:/host/etc/group:ro
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
  nginx-proxy:
    build:
      dockerfile: dockers/prod/nginx-proxy/Dockerfile
      context: .
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - certs:/etc/nginx/certs:ro
      - vhostd:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
    labels:
      - com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy
  letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    restart: always
    environment:
      - NGINX_PROXY_CONTAINER=nginx-proxy
    volumes:
      - certs:/etc/nginx/certs:rw
      - vhostd:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - /var/run/docker.sock:/var/run/docker.sock:ro
  jupyter:
    build:
      dockerfile: dockers/dev/jupyter/Dockerfile
      context: .
    command: python manage.py shell_plus --notebook
    volumes:
      - .:/code
    ports:
      - "8888:8888"
    depends_on:
      - db